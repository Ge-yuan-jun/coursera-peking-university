/* =====================================================
描述

输入一个整数矩阵，计算位于矩阵边缘的元素之和。所谓矩阵边缘的元素，就是第一行和最后一行的元素以及第一列和最后一列的元素。

输入

第一行为整数k，表示有k组数据。

每组数据有多行组成，表示一个矩阵：

第一行分别为矩阵的行数m和列数n（m < 100，n < 100），两者之间以空格分隔。

接下来输入的m行数据中，每行包含n个整数，整数之间以空格作为间隔。

输出

输出对应矩阵的边缘元素和，一个一行。
=======================================================
*/

#include<iostream>
using namespace std;

int main(){
	int k = 0;
	int row = 0;
	int line = 0;
	int a[100][100];
	int sum;
	int *p;
	cin >> k;
	while(k > 0){
		sum = 0;
		cin >> row >> line;
		for(int i = 0; i < row; i++){
			for(int j = 0; j < line; j++){
				cin >> a[i][j];
				if(i == 0 || i == row-1 || j == 0 || j == line-1){
					sum += a[i][j];	
				}
			}
		}
		cout << sum << endl;
		k--;	
	}
	
	
	return 0;
} 
